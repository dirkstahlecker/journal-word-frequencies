[{"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/index.tsx":"1","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/App.tsx":"2","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/JournalReader.tsx":"3","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/Markup.tsx":"4","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/JournalWriter.tsx":"5","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/NameReference.ts":"6","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/MarkupUtils.ts":"7","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/NamePickerModal.tsx":"8","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/AddMarkupToExistingEntry.tsx":"9"},{"size":503,"mtime":1608506471474,"results":"10","hashOfConfig":"11"},{"size":4025,"mtime":1609276610576,"results":"12","hashOfConfig":"11"},{"size":2546,"mtime":1609269301579,"results":"13","hashOfConfig":"11"},{"size":2060,"mtime":1609269477087,"results":"14","hashOfConfig":"11"},{"size":5952,"mtime":1609276247007,"results":"15","hashOfConfig":"11"},{"size":10286,"mtime":1609275515213,"results":"16","hashOfConfig":"11"},{"size":1378,"mtime":1608509570849,"results":"17","hashOfConfig":"11"},{"size":2967,"mtime":1609275431889,"results":"18","hashOfConfig":"11"},{"size":4630,"mtime":1609275466262,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"ub9bi7",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/index.tsx",["41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["42","43"],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/App.tsx",["44","45"],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/JournalReader.tsx",["46","47"],"import * as React from \"react\";\n// import {NameReference} from \"./NameReference\";\nimport {observable, action, makeObservable} from \"mobx\";\nimport {observer} from \"mobx-react\";\nimport {MarkupUtils} from \"./MarkupUtils\";\nimport {Markup} from \"./Markup\";\nimport \"./JournalReader.css\";\n\nexport interface JournalReaderProps\n{\n\tmachine: JournalReaderMachine;\n}\n\nexport class JournalReaderMachine\n{\n\tprivate static DATE_REGEX = /\\d{1,2}-\\d{1,2}-\\d{1,2}:/;\n\n\t@observable public rawText: string = \"\";\n\n\tconstructor()\n\t{\n\t\tmakeObservable(this);\n\t}\n\n\t@action\n\tpublic updateRawText(value: string): void\n\t{\n\t\tthis.rawText = value; // = this.replaceMarkupWithDisplayName(value);\n\t}\n\n\tpublic static isDate(piece: string): boolean\n\t{\n\t\treturn JournalReaderMachine.DATE_REGEX.test(piece);\n\t}\n\n\tpublic static splitOnMarkupPiecesAndDates(text: string): string[]\n\t{\n\t\t//eslint-disable-next-line no-useless-escape\n\t\tconst pieces: string[] = text.split(/(\\[!![^\\|]+\\|[^_]+_[^!]+!!\\])|(\\d{1,2}-\\d{1,2}-\\d{1,2}:)/); //split on markup and dates\n\t\treturn pieces;\n\t}\n\n\tpublic renderJournal(): JSX.Element | null\n\t{\n\t\tconst pieces: string[] = JournalReaderMachine.splitOnMarkupPiecesAndDates(this.rawText);\n\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tpieces.map((piece: string) => {\n\t\t\t\t\tif (piece === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\tif (Markup.isMarkup(piece))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn Markup.getHtmlForMarkup(Markup.create(piece));\n\t\t\t\t\t}\n\t\t\t\t\telse if (JournalReaderMachine.isDate(piece))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t{piece}\n\t\t\t\t\t\t</>;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn piece;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t</div>;\n\t}\n\n\t// private replaceMarkupWithDisplayName(rawText: string): string\n\t// {\n\t// \twhile (true)\n\t// \t{\n\t// \t\tlet markup: Markup | null = Markup.create(rawText);\n\t// \t\tif (markup == null)\n\t// \t\t{\n\t// \t\t\tbreak;\n\t// \t\t}\n\t//\n\t// \t\tconst displayName: string | null = markup.displayName;\n\t// \t\tif (displayName == null)\n\t// \t\t{\n\t// \t\t\tconsole.error(\"Invalid markup was received from getFullMarkupFromString\");\n\t// \t\t\treturn \"TODO\"; //TODO\n\t// \t\t}\n\t// \t\trawText = rawText.replace(markup, displayName);\n\t// \t}\n\t// \treturn rawText;\n\t// }\n}\n\n@observer\nexport class JournalReader extends React.Component<JournalReaderProps>\n{\n\tprivate get machine(): JournalReaderMachine\n\t{\n\t\treturn this.props.machine;\n\t}\n\n\trender()\n\t{\n\t\treturn <div className=\"journal-reader\">\n\t\t\t<input type=\"text\" onChange={(e) => this.machine.updateRawText(e.currentTarget.value)}/>\n\t\t\t<br/>\n\t\t\t<br/>\n\n\t\t\t{\n\t\t\t\tthis.machine.rawText != \"\" && \n\t\t\t\tthis.machine.renderJournal()\n\t\t\t}\n\t\t</div>;\n\t}\n}\n","/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/Markup.tsx",[],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/JournalWriter.tsx",[],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/NameReference.ts",[],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/MarkupUtils.ts",["48"],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/NamePickerModal.tsx",[],"/Users/dirkstahlecker/programming/journal-word-frequencies/client/src/AddMarkupToExistingEntry.tsx",[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":23},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"57","line":4,"column":37,"nodeType":"51","messageId":"52","endLine":4,"endColumn":48},{"ruleId":"49","severity":1,"message":"58","line":32,"column":9,"nodeType":"51","messageId":"52","endLine":32,"endColumn":17},{"ruleId":"49","severity":1,"message":"59","line":5,"column":9,"nodeType":"51","messageId":"52","endLine":5,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":112,"column":26,"nodeType":"62","messageId":"63","endLine":112,"endColumn":28},{"ruleId":"49","severity":1,"message":"64","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'runInAction' is defined but never used.","'copyText' is assigned a value but never used.","'MarkupUtils' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Markup' is defined but never used.","no-global-assign","no-unsafe-negation"]